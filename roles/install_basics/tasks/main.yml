---

# the basic toolset within roles default variables can be extended by the
# usage of the variable `additional_basic_tools` on host or group level.
- name: 'merge tools to be installed'
  set_fact:
    install_tools: "{{ basic_toolset + additional_basic_tools | default([]) }}"

- name: 'merge pip tools to be installed'
  set_fact:
    install_pip_tools: "{{ basic_pip_toolset + additional_basic_pip_tools | default([]) }}"

- name: install the latest version of basic toolset
  package:
    name: "{{ item.name }}"
    state: "{{ item.state | default( package_state) }}"
  with_items: "{{ install_tools }}"
  become: yes

- name: ensure usage of Python3 on host
  become: yes
  ignore_errors: yes
  block:

    - name: check default version of Python
      command: "python --version"
      register: python_version

    - name: register helper variable
      set_fact:
        py2default: '{{ python_version.stderr | regex_search("(Python 2\..*)|(not found)") | default(False, boolean=True) }}'

    - name: check if Python3 is installed
      command: "which python3"
      register: py3path
      when: py2default

    - name: Update Alternatives
      command: "update-alternatives --install /usr/bin/python python {{ py3path.stdout }} 10"
      when: py2default

- name: install pip packages, force upgrade
  pip:
    name: "{{ pip_list }}"
    executable: pip3
    state: latest
  vars:
    pip_list:
      - pip
      # - python3-keyczar
      # - ansible

- name: install pip packages, force upgrade
  pip:
    name: "{{ item.name }}"
    executable: pip3
    state: latest
  with_items: "{{ install_pip_tools }}"
  become: yes

- name: download files, e.g. CA certificates
  get_url:
    url:   "{{ item.url }}"
    dest:  "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode:  "{{ item.mode  | default('0755') }}"
  with_items: "{{ basics_to_download }}"
  when: basics_to_download is defined
  become: yes
  ignore_errors: true

- name:  update certificate chain
  shell: update-ca-certificates
  become: yes

- name: install configs for unattended upgrades
  template:
    src: "{{ item }}.j2"
    dest: "/etc/apt/apt.conf.d/{{ item }}"
  become: yes
  with_items:
    - 10periodic
    - 50unattended-upgrades

...
