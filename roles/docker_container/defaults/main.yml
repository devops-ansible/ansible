---

docker_tag:            master
docker_home:           "/data/docker"
docker_restart_policy: unless-stopped

database_network: database
traefik_network:  proxy

cnt_pull:     missing # "always" would pull newest image
cnt_state:    started
cnt_recreate: no

# Label-definition for containers using Tr√¶fik
traefik_rule: "Host(`{{ item | default ( container.fqdn  | default ('')) }}`)"

traefik_web_middlewares:
  - "forcehttps@file"

traefik_websecure_middlewares:
  - "security@file"

traefik_labels:

  default:
    - key:   "traefik.enable"
      value: "true"
    - key:   "traefik.http.services.{{ container.name | replace('.', '_') }}.loadbalancer.server.port"
      value: "{{ container.traefik_port | default( '80' ) }}"

  web:
    - key:   "traefik.http.routers.{{ container.name | replace('.', '_') }}_http.rule"
      value: "{{ container.traefik_rule | default ( local_traefik_rule ) }}"
    - key:   "traefik.http.routers.{{ container.name | replace('.', '_') }}_http.entrypoints"
      value: "web"
    - key:   "traefik.http.routers.{{ container.name | replace('.', '_') }}_http.middlewares"
      value: "{{ ( traefik_web_middlewares | default( [] ) + container.traefik_web_middlewares | default( [] ) + container.traefik_middlewares | default( [] ) ) | join( ', ' ) }}"

  websecure:
    - key:   "traefik.http.routers.{{ container.name | replace('.', '_') }}.rule"
      value: "{{ container.traefik_rule | default ( local_traefik_rule ) }}"
    - key:   "traefik.http.routers.{{ container.name | replace('.', '_') }}.entrypoints"
      value: "websecure"
    - key:   "traefik.http.routers.{{ container.name | replace('.', '_') }}.tls"
      value: "true"
    - key:   "traefik.http.routers.{{ container.name | replace('.', '_') }}.tls.certresolver"
      value: "letsencrypt"
    - key: "traefik.http.routers.{{ container.name | replace('.', '_') }}.middlewares"
      value: "{{ ( traefik_websecure_middlewares | default( [] ) + container.traefik_websecure_middlewares | default( [] ) + container.traefik_middlewares | default( [] ) ) | join( ', ' ) }}"

docker_logging:
  driver: "json-file"
  options:
    max-size: "50m"
    max-file: "5"

...
