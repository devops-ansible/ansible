---

- name: return app
  debug:
    msg: "{{ app }}"
  when: debug == true

- name: remote -  Create traefik network
  docker_network:
    name: "{{ traefik_network }}"
    state: present
  when: traefik_network is defined and remote == true

- name: remote -Create internal network
  docker_network:
    name: "{{ internal_network }}"
    state: present
  when: internal_network is defined and remote == true

- name: remote -Create database network
  docker_network:
    name: "{{ database_network }}"
    state: present
  when: database_network is defined and remote == true

- name: localhost - Create traefik network
  docker_network:
    name: "{{ traefik_network }}"
    state: present
  delegate_to: localhost
  when: remote != true and traefik_network is defined

- name: localhost - Create internal network
  docker_network:
    name: "{{ internal_network }}"
    state: present
  delegate_to: localhost
  when: remote != true and internal_network is defined

- name: remote -Create database network
  docker_network:
    name: "{{ database_network }}"
    state: present
  when: database_network is defined and remote != true

- name: recreate or rollout services
  docker_compose:
    project_src: "{{ composerFilePath }}/{{ app.key }}"
    state: present
    build: no
    pull: yes
    recreate: "{{ app.recreate | default('smart') }}"
  register: output
  when: remote == true

- name: recreate or rollout services
  docker_compose:
    project_src: "{{ composerFilePath }}/{{ app.key }}"
    state: present
    build: no
    pull: yes
    recreate: "{{ app.recreate | default('smart') }}"
  register: output
  delegate_to: localhost
  when: remote != true

- name: Deploy Bootup.sh
  copy:
    src: bootup.sh
    dest: "{{ composerFilePath }}/bootup.sh"
    mode: u+rw,g-wx,o-rwx

- name: Deploy .env
  template:
    src: env.j2
    dest: "{{ composerFilePath }}/.env"

- name: return output var
  debug:
    var: output
  when: debug == true

...
