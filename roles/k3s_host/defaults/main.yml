---

install_k3s:

  prerequisites:
    - name: "apt-transport-https"
    - name: "ca-certificates"
    - name: "curl"
    - name: "gnupg2"
    - name: "software-properties-common"
    - name: "python3-pip"
    - name: "jq"

package_state: "latest"

install_containernetworking_cni: true

final_k3s_install_env: ""

k3s_data_dirs:
  # - k3s: "/run/k3s"
  - k3s: "/var/lib/kubelet"
  - k3s: "/var/lib/rancher"

k3s_nerdctl_version: "latest"
k3s_nerdctl_path: "/opt/nerdctl"

# ansible_arch to release arch mapping
containerd_arch: >-
  {{ containerd_arch_map[ansible_architecture] | default(ansible_architecture) }}
containerd_arch_map:
  x86_64: "amd64"
  aarch64: "arm64"

containerd_config_path: "/etc/containerd/config.toml"
nerdctl_config_path: "/etc/nerdctl/nerdctl.toml"

nerdctl_config:
  debug: false
  debug_full: false
  address: "unix:///run/k3s/containerd/containerd.sock"
  namespace: "k8s.io"
  snapshotter: "stargz"
  cgroup_manager: "cgroupfs"
  hosts_dir:
    - "/etc/containerd/certs.d"
    - "/etc/docker/certs.d"
  experimental: "{{ nerdctl_experimental | default( true ) }}"

cni_plugins_version: "latest"
cni_plugins_path: "/opt/cni"
cni_plugin_gitrepo: "containernetworking/plugins"

...
